#autoline 10

RUN AT 3
LAYER 2,1: CLS
PAPER 0
INK 7
 
PROC loadAssets()
PROC initGame()

PROC loadDungeon(1)
PROC drawPlayer(1)
PROC drawPlayer(2)
PROC mainLoop()

STOP

DEFPROC loadAssets()
    LAYER 2,1: CLS
    BORDER 0

    LOAD "./ASSETS/DUNGEONS/dungeon.spr" BANK 15
    LOAD "./ASSETS/actors.spr" BANK 17
    LOAD "./ASSETS/DUNGEONS/dungeon1.map" BANK 16

    TILE BANK 15

    SPRITE BANK 17
    SPRITE PRINT 1
ENDPROC

DEFPROC initGame()
    REM Player: x, y, direction, speed, frame, firing, bullet, lives, score, dying, waiting countdown
    REM TODO read this in using DATA?
    DIM p(2,7) 
    LET %p[1][1]=80
    LET %p[1][2]=144
    LET %p[1][3]=0
    LET %p[1][4]=0
    LET %p[1][5]=0
    LET %p[1][6]=0
    LET %p[1][7]=3
    LET %p[2][1]=240
    LET %p[2][2]=144
    LET %p[2][3]=4
    LET %p[2][4]=0
    LET %p[2][5]=0
    LET %p[2][7]=0
    LET %p[2][7]=3
    REM TODO add dimensions for 6 regular baddies plus worluk and wizard of wor
    REM TODO - x, y, direction, speed, frame, firing, [burwor|garwor|thorwor]
    REM TODO door data
    REM TODO - open|closed
    REM TODO game data
    REM TODO - [menu|playing_ssd|playing_dsd|splash|splash_extra_man|worluk|wizard], numPlayers
ENDPROC

DEFPROC mainLoop()
    REPEAT
        PROC readJoystick(1)
        PRINT AT 0,15;%p[1][3];%p[1][4]
        PROC movePlayer(1)
        PROC drawPlayer(1)
    REPEAT UNTIL 0
ENDPROC

DEFPROC loadDungeon(%d)
    REM TODO: Dungeon offset
    TILE DIM 16,0,13,16
    TILE 13,8 TO 2,0
ENDPROC

DEFPROC movePlayer(%n)
    IF %p[n][4]=0 THEN ENDPROC
    IF %p[n][3]=0 THEN PROC moveRight(%n)
    IF %p[n][3]=1 THEN PROC moveDown(%n)
    IF %p[n][3]=3 THEN PROC moveUp(%n)
    IF %p[n][3]=4 THEN PROC moveLeft(%n)
    REM Change animation frame 0->1->2->0
    LET %p[n][5]=%p[n][5]+1
    IF %p[n][5] = 3 THEN LET %p[n][5]=0
ENDPROC

DEFPROC moveUp(%n)
    LOCAL %y
    LET %y=%p[n][2]-1
    REM Check for walls
    LET %p[n][2] = %y
ENDPROC

DEFPROC moveDown(%n)
    LOCAL %y
    LET %y=%p[n][2]+1
    LET %p[n][2] = %y
ENDPROC

DEFPROC moveRight(%n)
    LOCAL %x
    LET %x=%p[n][1]+1
    LET %p[n][1]=%x
ENDPROC

DEFPROC moveLeft(%n)
    LOCAL %x
    LET %x=%p[n][1]-1
    LET %p[n][1]=%x
ENDPROC

DEFPROC traverseDoor(%n)
    REM TODO teleport left or right door
ENDPROC

DEFPROC drawPlayer(%n)
    REM 00000001 RIGHT   (0)(1)
    REM 00000011 DOWN    (1)(4)
    REM 00000111 UP      (3)(8)
    REM 00001001 LEFT    (4)(2)
    LOCAL %f
    LOCAL %a
    REM flags
    LET %f=%p[n][3] << 1
    REM animation pattern
    LET %a=%p[n][5] + ((n - 1) * 4)
    SPRITE %n, %p[n][1], %p[n][2], %a, %f | BIN 00000001
ENDPROC

DEFPROC readJoystick(%n)
    LOCAL %j
    LOCAL %d
    REM Read Joystick port 1
    IF %n=1 THEN LET %j= IN 31
    REM Read Joystick port 2
    IF %n=2 THEN LET %j= IN 55
    PRINT AT 10,20;%j
    REM Maintain current direction
    LET %d=%p[n][3]
    REM Right
    IF %j=1 THEN LET %d=0
    REM Left
    IF %j=2 THEN LET %d=4
    REM Down
    IF %j=4 THEN LET %d=1
    REM Up
    IF %j=8 THEN LET %d=3
    Rem Firing
    IF %j& BIN 00010000 =16 THEN LET %p[n][6]=1
    REM Update player speed to 0 (stopped)
    LET %p[n][4]=0
    REM Update player speed to 1 if any direction pressed
    IF %j& BIN 00001111 > 0 THEN LET %p[n][4]=1
    REM Update player direction
    LET %p[n][3] = %d 
ENDPROC